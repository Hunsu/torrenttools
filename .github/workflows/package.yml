name: Package

on:
  workflow_dispatch:
    branches: [ main, develop ]

jobs:
  package-tarball:
    name: "Tarball"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install build dependencies
        run: sudo apt-get install -y libstdc++-10-dev g++-10 gcc-10 cmake libssl-dev libtbb-dev libre2-dev libyaml-cpp-dev nlohmann-json3-dev

      - name: Fetch external projects
        run: scripts/fetch_dependencies.sh

      - name: Configure
        run: |
          cmake -S . -B cmake-build-release -DCMAKE_CXX_COMPILER=g++-10 -DCMAKE_BUILD_TYPE=Release -DTORRENTTOOLS_BUILD_TESTS=ON

      - name: Build tarball
        working-directory: cmake-build-release
        run: |
          cpack --config CPackSourceConfig.cmake -G TGZ

      - name: Determine Version
        id: cmake_version
        run: |
          CMAKE_PROJECT_VERSION=$(grep -oP "(?<=CMAKE_PROJECT_VERSION:STATIC=).*" cmake-build-release/CMakeCache.txt)
          echo "::set-output name=cmake_project_version::${CMAKE_PROJECT_VERSION}"
          echo "${CMAKE_PROJECT_VERSION}" > version.txt

      - name: Save version.txt
        uses: actions/upload-artifact@v2
        with:
          name: version.txt
          path: version.txt
          retention-days: 1

      - name: Upload tarball as artifact
        uses: actions/upload-artifact@v2
        with:
          name: torrenttools-${{ steps.cmake_version.outputs.cmake_project_version }}.tar.gz
          path: cmake-build-release/torrenttools-${{ steps.cmake_version.outputs.cmake_project_version }}.tar.gz
          retention-days: 1

  package-windows:
    name: "Windows installer"
    runs-on: windows-latest
    needs: [ package-tarball ]
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            make
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-yasm
            mingw-w64-x86_64-openssl
            mingw-w64-x86_64-intel-tbb

      - name: Download version file
        uses: actions/download-artifact@v2
        with:
          name: version.txt

      - name: Retrieve version
        id : cmake_version
        run: |
          CMAKE_PROJECT_VERSION="$(cat version.txt)"
          echo "::set-output name=cmake_project_version::${CMAKE_PROJECT_VERSION}"

      - name: Download tarball artifact
        uses: actions/download-artifact@v2
        with:
          name: torrenttools-${{ steps.cmake_version.outputs.cmake_project_version }}.tar.gz

      - name: Unpack sources tarball
        run: |
          tar -zxf torrenttools-${{ steps.cmake_version.outputs.cmake_project_version }}.tar.gz \
              --exclude torrenttools-${{ steps.cmake_version.outputs.cmake_project_version }}/external/CLI11/tests

      - name: Configure
        run: |
          cmake -G "MSYS Makefiles" -B cmake-build-release -S . \
                 -DDOTTORRENT_CRYPTO_LIB=openssl \
                 -DDOTTORRENT_MB_CRYPTO_LIB=isal \
                 -DCMAKE_BUILD_TYPE=Release \
                 -DTORRENTTOOLS_BUILD_TESTS=ON \
                 -DTORRENTTOOLS_BUILD_DOCS=OFF

      - name: Build
        run: cmake --build cmake-build-release --target torrenttools

      - name: Package
        run: |
          cd cmake-build-release
          cpack -G WIX

      - name: Upload installer as artifact
        uses: actions/upload-artifact@v2
        with:
          name: torrenttools-${{ steps.cmake_version.outputs.cmake_project_version }}-x86_64.msi
          path: cmake-build-release/torrenttools-${{ steps.cmake_version.outputs.cmake_project_version }}-x86_64.msi
          retention-days: 1